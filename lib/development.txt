################################################################################
12-28-19: ######################################################################
• Bump up Rails to 6.0.2, following instructions
  : https://selleo.com/blog/how-to-upgrade-to-rails-6
  : https://edgeguides.rubyonrails.org/configuring.html
  : & in the new_framework_defaults_6_0.rb:
    Turned each config on, one by one, and restarted server every time
    then flipped Rails defaults to "6.0" from 5.2 in application.rb
      config.load_defaults "6.0"
      => so, the new_framework_defaults_6_0.rb file should be safe to delete
      cuz, if I understand correctly,
      these cofigurations in the file are now the defaults loaded automatically

################################################################################



################################################################################
7-8-19: ########################################################################
• ActiveStorage :: Variant
: great resource (including resizing, until future version does it?):

  https://prograils.com/posts/rails-5-2-active-storage-new-approach-to-file-uploads

################################################################################



################################################################################
3-31-19: #######################################################################
• Setting up VisitorMailer's inquiry subject line:
  : Either right in VisitorMailer#inquiry():
      class VisitorMailer < ApplicationMailer
        def inquiry(inquiry)
          ..
          mail to: .., from: .., subject: 'Inquiry from rhouse2.com'
        end
      end

  : Or in en.yml:
      en:
        hello: "Hello world"
        ...
        visitor_mailer:
          inquiry:
            subject: 'Inquiry from rhouse2.com'

################################################################################



################################################################################
3-17-19: #######################################################################
• Setting up visitor mailer to handle online inquires
: following:

  https://www.murdo.ch/blog/build-a-contact-form-with-ruby-on-rails-part-1

  : includes tests, doing - write, fail, pass - them, too

################################################################################



################################################################################
3-9-19: ########################################################################
• Use inheritance to DRY up Portfolio model
: Tried delegating first, but didn't figure it our right away because
  the delegatee (Admin::Portfolio) is a nested model

    ...
    delegate_missing_to :'admin/portfolio' ... <= or something ?
    ...

: Also, doesn't appear Ruby/Rails idiomatic?
: So then tried inheriting
  : everything seems to work beautifully, as intended

  : Before:
    : portfolio.rb:
        class Portfolio < ApplicationRecord
          has_many :images, -> { ordered }

          scope :decks,     -> { where(service: 'Decks') }
          scope :flooring,  -> { where(service: 'Flooring') }
          scope :roofing,   -> { where(service: 'Roofing') }
          scope :siding,    -> { where(service: 'Siding') }
          scope :windows,   -> { where(service: 'Windows') }
        end
  : After:
    : portfolio.rb:
        class Portfolio < Admin::Portfolio
        end

: Portfolio inherits its methods from Admin::Portfolio
  : like Admin::Portfolio inherits from ApplicationRecord etc.

: Not sure if hidden future problems exist
  : e.g. don't need to inherit everything, just the deleted methods ..
  : .. so, noting here for future reference of what/when/why

################################################################################



################################################################################
3-5-19: ########################################################################
• Show & edit Portfolio's updatable images ordered (update on 3-2-19 note)
: Simply make the images scope ordered:

    ...
    scope :images, -> { order(show_order: :asc) }
    ...

: Sweet & simple
: But the approach has a N+1 query problem

  => will need to implement a scope with includes() and merge()

################################################################################



################################################################################
3-2-19: ########################################################################
• Make Portfolio's images updatable:
  : pass the existing images and a one new to the fields_for
    : unless one new image already is in the collection - so that render of edit
      with errors doesn't add another new image
  : done via portfolio instance method #persisted_images_plus_one_new

: That's it!
: Took too long to figure out, but happy/impressed with how little it takes. :)

: TODO: figure out how to show fields for the new image atop, first on the form.

################################################################################



################################################################################
2-27-19: #######################################################################
################################################################################
• Downgrade rubygems for heroku:
: git push staging failed
  : gem haml-rails updated to 2.0.0 a few commits ago (from 1.0.0, thx git)
  : that version required updating gem system (went from from 2.7.6 to 3.0.2)
  : rubygems 3.0.2 is not on heroku tho, so must downgrade:

  : Gemfile:
      ...
      gem 'haml-rails', '1.0.0'
      ...
  : terminal:
    $ gem update --system 2.7.6
    $ bundle update                 # nothing was updated
    $ rails s                       # all works
  : commit and push to staging, all works

################################################################################
• Setting Heroku for GCS:
  : see the app's heroku current settings:

    $ heroku config -a rhouse2-staging

  : set the env variable (i.e., read its value from the pointed file):

    $ heroku config:set GOOGLE_SERVICE_ACCOUNT_KEY_CREDENTIALS="$(< config/secre
      ts/rhouse2.json)" -a rhouse2-staging

: sources:
  : https://link.medium.com/7eZLemHEEU
  : https://link.medium.com/Jq2uPlfbyU

################################################################################
• Google Cloud Storage GCS - Projects & Buckets & permissions:
: at the moment, I think, this is the optimal setup:
  : app (e.g. rhouse2) will have one project (say, rhouse2, name must be unique
    across all buckets on GCS (hm!))
  : and the GCS project (rhouse2) will have 2 or 3 buckets:
    : rhouse2
      : for assets uploaded manually by the developer: logo, hero, etc.
      : permission StorageObjectViewer given to allUsers at the bucket level
      : no service account needed here (?) (I removed it, all works)
    : rhouse2-attachments-development
      : for assets uploaded via the app's API/GUI, by the app's intended
        users/visitors: i.e. attachments
      : permissions to the assets (objects) given via bucket's service account
    : rhouse2-attachments-production
      : same as dev
: that's because:
  : files uploaded by the app's API are issued keys managed by Google
  : manual uploads must(?) go to a bucket that gives viewing permission to
    allUsers (internet public)
  : but this permission is given on a bucket level, and once a bucket has
    a bucket level permission to allUsers, permissions cannot be managed via
    bucket's service account
  : but app's API (e.g. ActiveStorage) can access only buckets it is
    authenticated/authorized to access
  : and this authentication/authorization is done via service account that
    carries permissions and that service account itself must pass
    authentication/authorization via google's keys (stored in config/secrets/)
    to access the bucket's objects (the app's assets managed by the app's users,
    visitors)
  : now back to the assets uploaded by the developer (logo, hero, other
    background and decorative pics and vids):
    : those are not uploaded via authenticated API (via service account), have
      no keys, cannot be in a bucket access to which is channeled through keys
    : and so these assets must be in their own bucket w/ bucket level permission
      to allUsers

  ... or somehow along these lines it seems

################################################################################



################################################################################
2-26-19: #######################################################################
• Add custom attributes to ActiveStorage:
: Specifically, I needed comment on the portfolios pics
: This turned into a major, prolonged hunt for solution
: Adding fields directly to the ActiveStorage tables didn't work
: No documentation. Fucking Rails when it comes to this
: Finally, I found (in succession) these, and adapted the last link:
  : https://stackoverflow.com/q/50770660/247626 <= one commenter stood out:
  : https://stackoverflow.com/users/128546/george-claghorn
  : https://stackoverflow.com/search?q=user:128546+[rails-activestorage]
  : https://stackoverflow.com/q/49510195/247626 <= & here George linked:
  : https://gist.github.com/georgeclaghorn/9baf3b9f1796eed5a983d35825b7f86c
    : and that's what I ended up doing here

: Basically, it's a workaround using join table/model (images, Image) that
  will carry the comment, and will have the image itself (file) attached:
  : portfolio has many images - the linking files that have the comment
  : each image has one file - the file is the actual image actually :)

: Several issues had to be resolved, none mentioned in the above resources:
  : Portfolio:
      ...
      accepts_nested_attributes_for :images
      ...

  : /admin/portfolios/_form, 2 items:
      ...
      = fields_for ..
      ...

    : and, this one was mysterious, putting fields_for into the form
      and nested attributes into the model and reloading the _form, the
      fields_for just disappeared
    : https://stackoverflow.com/q/11769592/247626

      ...
      = fields_for .. @admin_portfolio.images.new ..

    : putting this in the admin_portfolios_controller#edit allows editing of
      the comments
    : TODO: took it out for now, didn't have time to explore and style
      but make that possible, is needed, of course

################################################################################



################################################################################
2-23-19: #######################################################################
################################################################################
• Prune images from Git repo history:
: Install the tools, BFG & its dependency Java

    sites $ brew cask install java            # a huge download
    sites $ brew install bfg

: Follow instructions at https://rtyley.github.io/bfg-repo-cleaner/:

    sites $ bfg                               # list typical commands/tasks

  : note the comment on this option:

    --no-blob-protection    allow the BFG to modify even your *latest* commit.
                            Not recommended: you should have already ensured
                            your latest commit is clean.

  : 1. ok then, first, delete undesired files (all the .jpg)
  : 2. and do a clean commit (per bfg's recommendation above):

    rhouse2 $ git cim 'remove all pics from assets'

  : 3. push the clean commit up (to the origin, [staging]):

    rhouse2 $ git push
    rhouse2 $ git push staging [branch_name:master]     # needed ?

  : 4. purge the .jpg files from git history:

    rhouse2 $ cd ..
    sites $ git clone --mirror http://github.com/arta/rhouse2.git
    sites $ bfg --delete-files '*.jpg' rhouse2.git
    sites $ cd rhouse2.git
    rhouse2.git $ git reflog expire --expire=now --all && git gc --prune=now --a
    ggressive
    rhouse2.git $ git push                    # pushing to the origin
                                              # took a long time
                                              # pushed to both branches

  : 5. clone a fresh new copy                 # <= very important !!!!!
                                              # do not use the original copy
                                              # I did, from Github Desktop,
                                              # fetched (then pulled (?)) origin
                                              # !!! => learn about fetch <= !!!
                                              # then pushed ... a mess yes
                                              # ... aaand ...
                                              # Github repo had all commits
                                              # duplicate (376 v 188) .. and ..
                                              # I had to redo all of the above
                                              # to get to 5. anew, and:

      rhouse2.git $ cd ..

    : rename rhouse2 (-> rhouse2-orig), and clone rhouse2 anew:

      sites $ git clone http://github.com/arta/rhouse2.git rhouse2

  : 6. add staging and production:

      sites $ cd rhouse2
      rhouse2 $ git remote add staging https://git.heroku.com/rhouse2-staging.git
      rhouse2 $ git remote add production https://git.heroku.com/rhouse2.git

  : 7. push to staging (not production yet)

      rhouse2 $ git push staging

• So, this is a lot of work.

• Do not put pics into repos.

• BTW, it's worth it:
  : pre-prune (dirty) repo with the pics:         180 MB
  : post-prune (clean) repo without the pics:       5 MB
  : 36x smaller now

################################################################################
• Background gradient:

    main.pantheon.portfolios {
      background-image: radial-gradient(#7aa0ac, #305059);
    }
    main.portfolio {
      background-image: radial-gradient(#305059, #223b41);
    }

################################################################################



################################################################################
2-17-19: #######################################################################
• Foundation's elusive silent box-sizing normalize/reset:
: huh, this one took a while ..
: Foundation applies this silently in _global.scss
  : but does not disclose, does not provide API to change/unset in their
  : overrides file (say, under 1. Global).
  : Grrr ...
  : Took me several hours to find out why is my .griddle squished narrower
  : after implementing Foundation.

      html {
        box-sizing: border-box;
      }
      *, *:before, *:after {
        box-sizing: inherit;
      }

: It can be found here:

  https://www.paulirish.com/2012/box-sizing-border-box-ftw/

  with this comment:

  /* apply a natural box layout model to all elements, but allowing components
    to change */

: Interestingly, normalize.css doesn't reset this, hm ..

: While I visually prefer the original setting by browsers (Chrome, Safari):

      box-sizing: content-box;

  because my .griddle was wider (to my liking), I will stick with (and
  start applying in future projects) this reset, esp. after reading:
  https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/

################################################################################



################################################################################
2-11-19: #######################################################################
• Custom font:
: https://blog.miragestudio7.com/architecture-fonts-download-free-architect-handwriting-font/3339/
: love these, figure out where to implement some
  : thinking portolios' figcaption tags?

################################################################################



################################################################################
2-4-19: ########################################################################
• States, specifically, styling css classes for nav items states;
: spent quite a lot of time on iterations figuring it out a solution that
  : reads well in all contexts
  : is minimalistic & simple

: Could have been a faster process if I started with thinking about the
  specific states first, e.g.:
  : nave item can be:
    : black, hover                       idle, can go to
    : red (no hover)                     current page, "cannot go to it"
    : red, hover                         parent/upstream/bread-crumb, can go to

  : realizing this could have possibly lead to arriving at the number of
    required state (& styling) classes and their names faster:
    : li, li:hover                       <= black,  hover effect
    : li.current.view:hover              <= red,    no hover effect
    : li.current                         <= red,    hover effect

################################################################################



################################################################################
1-16-19: #######################################################################
• Custom font:
: https://stackoverflow.com/q/7961721/247626
: figure out how to implement Archistico (free for commercial use):
  https://www.1001fonts.com/archistico-font.html
: or even better yet Handwriting Draft (not free for commercial use):
  https://www.fontspace.com/fontscafe/handwriting-draft-free-version
